server:
  port: 8083
  servlet:
    session:
      timeout: 30m

url:
  base: 3000
  path:
    signup: SIGN_UP_PATH # 실제 회원가입 주소로 수정 필요
    auth: AUTH_PATH # 실제 주소로 수정 필요

spring:
  application:
    name: auth-service
  datasource:
    url: ENC(g4muEoWBqQKAwI5aQgMjQeRfJ/5QsNevAzC9WoPlcTcAtJdEluy6ZbNrmxmXyXdl)  # 필요한 경우 사용자 정보 조회를 위한 DB 연결
    username: ENC(VILc4kn/EvGzHiqXD5pCKQ==)
    password: ENC(U/OS9j9t+Hej7AzwfryWRb7gJoH1/qXm)
    driver-class-name: org.postgresql.Driver
  redis:
    host: localhost  # Redis 서버 호스트
    port: 6379  # Redis 서버 포트
  security:
    oauth2:
      client:
        registration:
          # OAuth 2.0 클라이언트 설정 (예: Google, Facebook 등)
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - email
              - profile
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/userinfo/v2/me
            user-name-attribute: id

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8787/eureka #유레카 서버에 등록합니다.

logging:
  level:
    com.netflix.discovery: DEBUG
    org.springframework.cloud.netflix.eureka: DEBUG

jwt:
  token:
    secret-key: ENC(hAM0qI7p8GLKQgsz5TGINR6tFoWf7OqeV7uUxmglkHqT0S2T7SdvMUgxbRSC42nK)
  access-token:
    expire-length: 1800000
  refresh-token:
    expire-length: 1209600000
  redis:
    host: localhost
    port: 6379
    # 아래 수정 필요
    password: ENC(MySuperSecureKey123456789012345678901234567890)

jasypt:
  encryptor:
    password: ${JASYPT_KEY}